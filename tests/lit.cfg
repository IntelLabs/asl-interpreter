# Copyright (C) 2023-2025 Intel Corporation
import lit.formats
import subprocess

lit_cfg_path = os.path.dirname(os.path.abspath(__file__))
asl_path = os.path.dirname(lit_cfg_path)
asli_bin_path = os.path.join(asl_path, "_build/default/bin/asli.exe")
asl2c_path = os.path.join(asl_path, "_build/default/bin/asl2c.py")
backend = os.environ.get("ASL_BACKEND")
ac_types_dir = os.environ.get("AC_TYPES_DIR")
sc_types_dir = os.environ.get("SC_TYPES_DIR")
ASL_CC = os.environ.get("ASL_CC")

# Lit configuration
if backend is None:
    config.name = "ASL"
    backend = "fallback"
else:
    config.name = f"ASL backend {backend}"

if backend == "sc" and ASL_CC is None:
    ASL_CC = "g++"

config.test_format = lit.formats.ShTest("0")
config.suffixes = {".asl"}
config.target_triple = ""

config.available_features = [backend]

proc = subprocess.run(["make", f"-C{asl_path}/runtime/test", "wide_bitint_supported"], capture_output=True, encoding='latin_1')
if proc.returncode == 0 and "1" in proc.stdout:
    config.available_features.append("wide_bitint")

config.substitutions.append(('%asli', asli_bin_path))
config.substitutions.append(('%aslrun', f"{asl2c_path} --backend={backend} -O0 --run"))
config.substitutions.append(('%aslopt', f"{asl2c_path} --show-final-asl"))
config.environment["ASLI_DIR"] = asl_path
config.environment["ASL_PATH"] = f":{asl_path}:."
if ac_types_dir: config.environment["AC_TYPES_DIR"] = ac_types_dir
if sc_types_dir: config.environment["SC_TYPES_DIR"] = sc_types_dir
if ASL_CC: config.environment["CC"] = ASL_CC
